name: Copy Release

on:
  release:
    types: [published]

jobs:
  copy-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Verify the repository to prevent recursion
      - name: Verify repository
        run: |
          if [[ "${{ github.repository_owner }}" == "bic-sastra" && "${{ github.event.repository.name }}" == "Bacalyze" ]]; then
            echo "This is not the original repository. Exiting."
            exit 0
          fi
        # Step 1.5: Download release assets
      - name: Download release assets
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            RELEASE_ID="${{ github.event.release.id }}"
            mkdir -p release-assets
            curl -H "Authorization: token $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets \
              | jq -r '.[] | "\(.url) \(.name)"' \
              | while read -r ASSET_URL ASSET_NAME; do
              curl -L -H "Authorization: token $GITHUB_TOKEN" \
                -H "Accept: application/octet-stream" \
                -o "release-assets/$ASSET_NAME" "$ASSET_URL"
            done
      # Step 2: Define variables and copy the release to the fork
      - name: Copy release to fork
        env:
          GITHUB_TOKEN: ${{ secrets.MIRROR_PAT }}
        run: |
          # Define fork repository and release information
          FORKED_REPO="bic-sastra/Bacalyze"
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          RELEASE_NAME="${{ github.event.release.name }}"
          RELEASE_BODY="${{ github.event.release.body }}"

          # Create the release in the fork
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/$FORKED_REPO/releases \
            -d '{
              "tag_name": "'"$RELEASE_TAG"'",
              "name": "'"$RELEASE_NAME"'",
              "body": "'"$RELEASE_BODY"'",
              "draft": false,
              "prerelease": false
            }'